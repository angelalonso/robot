#!/usr/bin/env python3

from random import seed
from random import randint
import time
import hashlib

import rclpy
from rclpy.node import Node
from processing import process_input

def mock_distance():
    result = randint(1, 999)
    return result

class SerialLink(Node):

    def __init__(self):
        super().__init__('arduino_serial_sync_mocked')
        self.mocked_list = [] 
        self.mocked_list_ix = 0
        filename = './arduino_mocked_values.list'
        with open(filename) as file:
            for line in file:
                self.mocked_list.append(line.strip())

    def get_value(self):
        try:
            value = self.mocked_list[self.mocked_list_ix]
        except IndexError:
            self.mocked_list_ix = 0
            value = self.mocked_list[self.mocked_list_ix]
        self.mocked_list_ix += 1
        result = "SENSOR: distance=" + value + "|"
        self.get_logger().info(result)
        return result

    def sync_and_read(self):
        while True:
            self.get_logger().info(process_input(self.get_value()))
            time.sleep(1)


def main(args=None):
    rclpy.init(args=args)

    arduino_serial = SerialLink()

    arduino_serial.sync_and_read()

    rclpy.shutdown()

if __name__ == '__main__':
    main()
